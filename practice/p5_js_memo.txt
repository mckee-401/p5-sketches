function setup() {
  //事前準備、一度だけ作成
  createCanvas(400, 400);
  //キャンバスの大きさを指定
}

function draw() {
  background(220);
  //背景の明るさや色を設定
  //明るさは0~255
  //background(赤,緑,青)でRGB設定
  
  ellipse(200,200,80,80);
  //楕円を作成
  //中心のx座標,中心のy座標,
  //x方向の直径,y方向の直径の順
}

 図形の種類として
 ・circle(円)
 ・rect(長方形)
 ・square(正方形)←角を丸くできる
 ・triangle(三角形)
 ・quad(四角形)
 がある

塗りつぶし…fill(明るさ or RGB)
nofil()で塗りつぶしなし

枠線…stroke(明るさ or RGB)
strokeWeight(線の太さ)←単位はpx
nostroke()で枠線なし

塗りつぶしと枠線の設定は、
図形関数が呼び出される以前の最後に設定された値が有効

draw()内のループ停止...noloop()
setup()内ならどこで呼び出してもOK

------------------------------------------------------------------------

letで変数定義
constで定数

width...キャンバスの横幅
height...キャンバスの縦幅

**で階乗

文字列は''囲むのが一般的

型がないので
let x =100;
x += 'だよ!';
print(x) //100だよ！
のように文字列と数字の連結も可

------------------------------------------------------------------------

for文の()でi++の代わりにi+=1とすることで他の演算子も使える

for文の()内は省略できる
ただしセミコロン(;)は必要
ex) for(;;){}

for(let i=0,x=50;i<5;i+=1,x+=100){
circle(x,height/2,DIA);
}
のようにごちゃ混ぜにしてもOK

for文はbreak;もcontinue;も使える

-----------------------------------------------------------------------

let 配列名 = [値,値...];

配列の個数を数えるのが面倒だからlenghtを用いる

配列の値がない場所は'undefined'で埋められる

配列名.push()で配列の末尾に要素を追加

random(最小値,最大値)で乱数生成

-----------------------------------------------------------------------

background関数の本来の役割は'指定した色でキャンバス全体を塗りつぶす'
→新しい図形を描画前に消すことができる！

draw()←アニメーションさせたい部分

createCanvas関数を使わないとwidthやheightは使えない

-----------------------------------------------------------------------
マウス入力について

主に
1.マウス操作の情報
2.ボタンとホイールの情報
3.ポインタの位置の情報

具体例
・mouseIsPressed...ボタンが押し込まれたこと(true,false)
・mouseButton...押されているボタンの種類(LEFT,RIGHT,CENTER)
・mouseX,mouseY...現在のポインタの座標(数値)

注意点
・mouseButtonの値は文字列ではないので""は不要
・not演算子(!)は使える

キー入力について

主に
1.キー操作の情報
2.押されたキーの情報

具体例
・keyIsPressed...キーが押されたこと(true,false)
・key...キーの値(文字列)

注意点
・keyの文字列はキー名でも数字でも''は必須
←数字として使うならparseInt関数を用いる

・実行時はブラウザのクリックが必要
←フォーカスを当てるため

・mouseIsPressedやkeyIsPressedは、キー情報の更新のためにある
←mouseButtonなどの情報を直接入れると、最後に押されたキーやボタンの情報を保持し続けてしまう
←押したときだけ反応させたいのであれば、if(mouseIsPressed)やif(keyIsPressed)を用いる

・関数定義の方の引数を”仮引数”という

・map関数
(入力値,最小値,最大値,新しい最大値,新しい最小値)
...入力値を新しい範囲で変換する
ex)3(1~10)→30(10~100)

マウス入力の値をキャンバスの範囲で変換する際に用いる
------------------------------------------------------------------------
クラスについて

クラスの定義
class クラス名{
  constructor(){
    //コンストラクタ  
  }
  //メソッドの定義
}

------------------------------------------------------------------------
アニメーション
draw()←1sに約60回実行されるブロック




